#!/bin/sh -efu

if [ -n "${VM_USAGE-}" ]; then
	printf 'kern <profile> <kernel>\n'
	exit 0
fi

if [ -n "${VM_HELP-}" ]; then
	printf 'Runs command with specified kernel\n'
	exit 0
fi

if [ -n "${VM_HELP_OPTIONS-}" ]; then
	cat <<-EOF
	  --no-check-kernel-config    do not check kernel .config;
	  --usage                     shows the help message of subcommand.
	EOF
	exit 0
fi

GETOPT_ALLOW_UNKNOWN=
TEMP=`getopt -n $PROG -o '' -l 'no-check-kernel-config,usage' -- "$@"` ||
	show_usage
eval set -- "$TEMP"

while :; do
	case "$1" in
		--no-check-kernel-config)
			no_check_kernel_config=1
			;;
		--usage)
			show_command_help
			;;
		--) shift; break
			;;
	esac
	shift
done

. shell-error

[ "$#" -gt 0 ] ||
	show_usage "Profile name required"

vm_profile="$1"
shift

export vm_profile

[ "$#" -gt 0 ] ||
	fatal "More arguments required"

kernel="$1"
shift

if [ -d "$kernel" ]; then
	qemu_kernel="find,$kernel"
elif [ -f "$kernel" ]; then
	qemu_kernel="$kernel"
else
	fatal "kernel file or path required"
fi

subst_globals qemu_kernel "$qemu_kernel"
export qemu_kernel

[ "$#" -gt 0 ] &&
	command="sandbox" ||
	command="run"

. "@PREFIX@/vm-command-$command"
