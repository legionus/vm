#!/bin/sh -efu

if [ -n "${VM_USAGE-}" ]; then
	printf 'sandbox [options] <profile>\n'
	printf 'sandbox [options] <profile> PROG [ARGS...]\n'
	exit 0
fi

if [ -n "${VM_HELP-}" ]; then
	printf 'Runs a command in a sandboxed guest\n'
	exit 0
fi

if [ -n "${VM_HELP_OPTIONS-}" ]; then
	cat <<-EOF
	  --no-check-kernel-config    do not check kernel .config;
	  --usage                     shows the help message of subcommand.
	EOF
	exit 0
fi

GETOPT_ALLOW_UNKNOWN=
TEMP=`getopt -n $PROG -o '' -l 'no-check-kernel-config,usage' -- "$@"` ||
	show_usage
eval set -- "$TEMP"

while :; do
	case "$1" in
		--no-check-kernel-config)
			no_check_kernel_config=1
			;;
		--usage)
			show_command_help
			;;
		--) shift; break
			;;
	esac
	shift
done

[ "$#" -gt 0 ] ||
	show_usage "Profile name required"

vm_profile="$1"
shift

export vm_profile

. shell-error
. shell-quote
. shell-git-config

. "@PREFIX@/vm-sh-config"

vm_read_profile_config
vm_check_kernel_config

rootfs=
git_config_get rootfs "$vm_config_file" "vm.$vm_profile.rootfs"
subst_globals rootfs "$rootfs"

[ -d "$rootfs" ] ||
	fatal "Rootfs not found"

[ "$#" -eq 0 ] ||
	set -- /bin/bash

{
	printf '#!/bin/sh -i\n'
	printf 'cd "%s"\n' "/host/$cwddir"
	printf 'exec'
	printf ' "%s"' "$@"
	printf '\n'
} > "$rootfs/virt/sandbox.sh"
chmod +x -- "$rootfs/virt/sandbox.sh"

rc=0
(. "@PREFIX@/vm-command-run") || rc=$?

rm -f -- "$rootfs/virt/sandbox.sh"
exit $rc
