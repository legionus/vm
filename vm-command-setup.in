#!/bin/sh -efu

. shell-error
. shell-git-config

show_usage() {
	cat <<EOF
Usage: $PROG [options]

Options:
  -g, --global=DIR    creates global rootfs;
EOF
	exit 0
}

TEMP=`getopt -n $PROG -o 'g:' -l 'global:' -- "$@"` ||
	show_usage
eval set -- "$TEMP"

global=
while :; do
	case "$1" in
		-g|--global) shift
			global="$1"
			;;
		--) shift; break
			;;
	esac
	shift
done

[ -n "$vm_profile" ] ||
	fatal "Profile name be specified"

if [ -n "$global" ]; then
	verbose "Setup global rootfs."
	dest_dir="$global"
else
	dest_dir="$vm_config_dir/rootfs/$vm_profile"
fi

git_config_location_exists "$vm_config_file" "vm.$vm_profile" ||
	verbose "Profile does not exist. Creating ..."

git_config_set "$vm_config_file" "vm.$vm_profile.rootfs" "$dest_dir"
git_config_set "$vm_config_file" "vm.$vm_profile.append" "init=virt/init root=/dev/root rootflags=rw,trans=virtio,version=9p2000.L,setuid=0 rootfstype=9p rw"

git_config_unset  "$vm_config_file" "vm.$vm_profile.virtfs"
git_config_append "$vm_config_file" "vm.$vm_profile.virtfs" "$dest_dir:/dev/root"
git_config_append "$vm_config_file" "vm.$vm_profile.virtfs" "/:hostfs"

if [ -d "$dest_dir" ]; then
	verbose "Rootfs already exists: $dest_dir"
	exit 0
fi

verbose "Creating rootfs: $dest_dir"

mkdir ${verbose-} -p -- "$dest_dir"
cd "$dest_dir"

for n in dev etc home host proc root sys tmp var var/lib virt virt/home; do
	mkdir ${verbose-} -p -- "./$n"
done

for n in bin lib lib64 sbin usr etc/ld.so.conf; do
	[ ! -e "/$n" ] ||
		ln ${verbose-} -s -- "/host/$n" "./$n"
done

printf 'root:x:0:0:root:/root:/bin/sh\n' > ./etc/passwd
printf 'root:x:0:\n' > ./etc/group

cp ${verbose-} -- "@LIBEXECDIR@/init" ./virt/init
