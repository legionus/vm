#!/bin/sh -efu

if [ -n "${VM_USAGE-}" ]; then
	printf 'setup <profile> [options]\n'
	exit 0
fi

if [ -n "${VM_HELP-}" ]; then
	printf 'Setup a new sandbox\n'
	exit 0
fi

if [ -n "${VM_HELP_OPTIONS-}" ]; then
	cat <<-EOF
	  -g, --global=DIR       creates global rootfs;
	  -r, --kernel-requires  show kernel options required for the specified profile;
	EOF
	exit 0
fi

. shell-error
. shell-git-config

GETOPT_ALLOW_UNKNOWN=
TEMP=`getopt -n $PROG -o 'g:,r' -l 'global:,kernel-requires' -- "$@"` ||
	show_usage
eval set -- "$TEMP"

global=
show_kernel_requires=

while :; do
	case "$1" in
		-g|--global) shift
			global="$1"
			;;
		-r|--kernel-requires)
			show_kernel_requires=1
			;;
		--) shift; break
			;;
	esac
	shift
done

[ -n "$vm_profile" ] ||
	fatal "Profile name be specified"

if [ -z "$global" ]; then
	. "@PREFIX@/vm-sh-config"

	vm_read_common_config

	vm_profiles=
	git_config_get vm_profiles "$vm_config_file" "vm.profiles"

	dest_dir="$vm_profiles/$vm_profile/rootfs"
else
	verbose "Setup global rootfs."
	dest_dir="$global"
fi

if [ -n "$show_kernel_requires" ]; then
	cd '@PREFIX@'
	grep -h -v -e '^[[:space:]]*\(#.*\)\?$' $kernel_config_expect |
		sort -u
	exit
fi

vm_check_kernel_config

git_config_location_exists "$vm_config_file" "vm.$vm_profile" ||
	verbose "Profile does not exist. Creating ..."

git_config_set "$vm_config_file" "vm.$vm_profile.rootfs" "$dest_dir"
[ -z "${qemu_kernel-}" ] ||
	git_config_set "$vm_config_file" "vm.$vm_profile.kernel" "$qemu_kernel"
git_config_set "$vm_config_file" "vm.$vm_profile.append" "init=virt/init root=/dev/root rootflags=rw,trans=virtio,version=9p2000.L,setuid=0 rootfstype=9p rw"

git_config_unset  "$vm_config_file" "vm.$vm_profile.virtfs"
git_config_append "$vm_config_file" "vm.$vm_profile.virtfs" "$dest_dir:/dev/root"
git_config_append "$vm_config_file" "vm.$vm_profile.virtfs" "/:hostfs"

[ -d "$dest_dir" ] &&
	message "Updating rootfs: $dest_dir" ||
	message "Creating rootfs: $dest_dir"

mkdir ${verbose-} -p -- "$dest_dir"
cd "$dest_dir"

for n in dev etc home host proc root sys tmp var var/lib virt virt/home; do
	mkdir ${verbose-} -p -- "./$n"
done

for n in bin lib lib64 sbin usr etc/ld.so.conf; do
	[ -e "./$n" ] || [ -L "./$n" ] ||
		ln ${verbose-} -s -- "/host/$n" "./$n"
done

[ -f ./etc/passwd ] ||
	printf 'root:x:0:0:root:/root:/bin/sh\n' > ./etc/passwd
[ -f ./etc/group ] ||
	printf 'root:x:0:\n' > ./etc/group

cp ${verbose-} -- "@LIBEXECDIR@/init" ./virt/init
