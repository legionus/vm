#!/bin/sh -efu

if [ -z "${__include_vm_options-}" ]; then
__include_vm_options=1

parameter \
	'qemu_machine' \
	'one' \
	'machine' \
	'machine' \
	'accel=kvm:tcg' \
	'Specifies the emulated machine'

parameter \
	'qemu_arch' \
	'one' \
	'arch' \
	'arch' \
	'x86_64' \
	'Specifies target architecture'

parameter \
	'qemu_cpu' \
	'one' \
	'cpu-model' \
	'cpu-model' \
	'kvm64' \
	'Specifies CPU model'

parameter \
	'qemu_cpus' \
	'one' \
	'num-cpus' \
	'num-cpus' \
	'$(getconf _NPROCESSORS_ONLN)' \
	'Simulates an SMP system with n CPUs'

parameter \
	'qemu_memory' \
	'one' \
	'memory' \
	'memory' \
	'$(( 64 * ($qemu_cpus_default + 3) ))M' \
	'Specifies virtual RAM size'

parameter \
	'qemu_console' \
	'one' \
	'console' \
	'console' \
	'serial' \
	'Specifies console type'

parameter \
	'qemu_time' \
	'one' \
	'time' \
	'time' \
	'localtime' \
	'Specifies time settings'

parameter \
	'qemu_network' \
	'list' \
	'network' \
	'network' \
	'none' \
	'Specifies the mode network stack'


parameter \
	'qemu_append' \
	'one' \
	'append' \
	'append' \
	'' \
	'Specifies cmdline as kernel command line'

parameter \
	'qemu_addappend' \
	'one' \
	'addappend' \
	'addappend' \
	'' \
	'The kernel parameters from the specified string'

parameter \
	'qemu_balloon' \
	'one_bool' \
	'balloon' \
	'balloon' \
	'false' \
	'Enables virtio balloon device'

parameter \
	'qemu_kvm' \
	'one_bool' \
	'enable-kvm' \
	'enable-kvm' \
	'false' \
	'Enables KVM full virtualization support'

parameter \
	'qemu_reboot' \
	'one_bool' \
	'reboot' \
	'reboot' \
	'false' \
	'Exit instead of rebooting'

parameter \
	'qemu_monitor' \
	'one' \
	'monitor' \
	'monitor' \
	'qmp:unix:@vm.profiles@/@vm.name@/socket,server,nowait' \
	'Redirects the monitor to host device'

parameter \
	'qemu_graphic' \
	'one_bool' \
	'graphic' \
	'graphic' \
	'false' \
	'Disables graphical output'

parameter \
	'qemu_logfile' \
	'one' \
	'logfile' \
	'logfile' \
	'' \
	'Duplicates all output to the log file'

parameter \
	'qemu_tempdir' \
	'one' \
	'tempdir' \
	'tempdir' \
	'${TMPDIR:-/tmp}' \
	'Creates a temporary directory'

parameter \
	'qemu_watchdog' \
	'one' \
	'watchdog' \
	'' \
	'' \
	'Creates a virtual hardware watchdog device'

parameter \
	'qemu_disk' \
	'list' \
	'disk' \
	'' \
	'' \
	'Defines which disk image to use with this drive'

parameter \
	'qemu_device' \
	'list' \
	'device' \
	'' \
	'' \
	'Adds device driver and sets driver properties'

parameter \
	'qemu_virtfs' \
	'list' \
	'virtfs' \
	'' \
	'' \
	'Specifies the export path for the file system device'

parameter \
	'qemu_boot' \
	'one' \
	'boot' \
	'boot' \
	'' \
	'Specifies boot order drives as a string of drive letters'

parameter \
	'qemu_initrd' \
	'one' \
	'initrd' \
	'initrd' \
	'' \
	'Specifies file as initial ram disk'

parameter \
	'qemu_kernel' \
	'one' \
	'kernel' \
	'kernel' \
	'' \
	'Specifies bzImage as kernel image'

parameter \
	'qemu_random' \
	'one' \
	'random' \
	'random' \
	'' \
	'Use specified a random number generator backend'

parameter \
	'qemu_rootfs' \
	'one' \
	'rootfs' \
	'' \
	'' \
	''
fi
